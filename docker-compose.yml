version: '3.9'
services:
  db:
    image: library/postgres:13-alpine
    ports:
      - 5432:5432
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      mynetwork:
        ipv4_address: 172.16.0.54

  # broker:
  #   image: rabbitmq:management
  #   ports:
  #     - 5672:5672
  #     - 15672:15672
  #   restart: always
    # environment:
    #   - RABBITMQ_DEFAULT_USER=rabbitmq
    #   - RABBITMQ_DEFAULT_PASS=rabbitmq
    # networks:
    #   - mynetwork

  # redis:
    # image: redis:latest

    # networks:
    #   mynetwork:
    #    ipv4_address: 172.16.0.55

  web:
    image: educat:latest
    # build:
    #   dockerfile: Dockerfile
    #   context: .
    ports:
      - 8000:8000
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - .:/code
    networks:
      mynetwork:
       ipv4_address: 172.16.0.80

  # celery:
  #   build:
  #     dockerfile: Dockerfile
  #     context: .
  #   command: celery --app=core worker --loglevel=info
  #   env_file:
  #     - .env
  #   volumes:
  #     - ./:/code
  #   depends_on:
  #     - db
  #     - broker
  #     - redis

  #   networks:
  #     - mynetwork

  # flower:
  #   build:
  #     dockerfile: Dockerfile
  #     context: .
  #   command: celery --app=core flower
  #   ports:
  #     - 5555:5555
  #   volumes:
  #     - ./:/code
  #   depends_on:
  #     - broker
  #     - celery

  #   networks:
  #     - mynetwork

  # mailhog:
  #   image: mailhog/mailhog
  #   ports:
  #     - 1025:1025
  #     - 8025:8025
  #   networks:
  #     - mynetwork

volumes:
  postgres_data:

networks:
  mynetwork:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.0.0/24